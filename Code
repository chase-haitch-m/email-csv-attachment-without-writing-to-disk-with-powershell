Function Send-MailMessageCsvAttachment {
    [CmdletBinding(PositionalBinding=$false)]
    param
    (
        [Parameter(Mandatory = $true)]
        [ValidateNotNullOrEmpty()]
        [System.Collections.Generic.List[object]]$Attachments, # Accepts a single object or multiple comma-separated objects

        [Parameter(Mandatory = $true)]
        [String[]]$Names, # Accepts a single string or multiple comma-separated strings, input order corresponds to values of $Attachments

        [Parameter(Mandatory = $true)]
        [String]$From,

        [Parameter(Mandatory = $true)]
        [String]$To,

        [Parameter(Mandatory = $true)]
        [String]$Subject,

        [Parameter(Mandatory = $true)]
        [String]$Body,

        [Parameter(Mandatory = $false)]
        [String[]]$Cc,

        [Parameter(Mandatory = $false)]
        [String[]]$Bcc,

        [Parameter(Mandatory = $false)]
        [String[]]$ReplyTo,

        [Parameter(Mandatory = $true)]
        [String]$SmtpServer,

        [Parameter(Mandatory = $false)]
        [Int32]$Port
    )
    
    $SMTPClient = New-Object Net.Mail.SMTPclient($SmtpServer, $Port)
    
    $Email = New-Object Net.Mail.MailMessage($From, $To, $Subject, $Body)

        if($Cc)
    {
        $CcAddressList = New-Object System.Net.Mail.MailAddressCollection
        $Cc | Foreach {$CcAddressList.add($_)}
        $Email.CC.Add($CcAddressList)
    }
    
    if($Bcc)
    {
        $BccAddressList = New-Object System.Net.Mail.MailAddressCollection
        $Bcc | Foreach {$BccAddressList.add($_)}
        $Email.Bcc.Add($BccAddressList)
    }

    if($ReplyTo)
    {
        $ReplyToList = New-Object System.Net.Mail.MailAddressCollection
        $ReplyTo | Foreach {$ReplyToList.add($_)}
        $Email.ReplyToList.Add($ReplyToList)
    }

    if(!$Port){[Int32]$Port = '25'}

    if($Attachments)
    {
        $Count = 0
        foreach($Item in $Attachments)
        {
            $AttachmentCSV = $Item | ConvertTo-Csv -NoTypeInformation
            $Attachment = [System.Net.Mail.Attachment]::CreateAttachmentFromString($AttachmentCSV -join [environment]::NewLine,$Names[$Count])
            $Email.Attachments.Add($Attachment)
            $Count++
        }
    }

    $Email.IsBodyHTML = $True
    
    $SMTPClient.send($Email)
}
